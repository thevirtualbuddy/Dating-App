* Install angular CLI
> npm install -g @angular/cli

* Create the app
> ng new app_name

- The js file references get injected in our index.html with the help of webpack. 

* To run the app
> Run the app as ng serve -o 

* Add some VS extension:
> Angular Language Service
> Angular Snippets
> Brackets pair Colorizer

* Lifecycle hook - OnInit

* The way Angular handles asynchronous code is to use observables.

* Add CORS(Cross Origin Resource Sharing) support in the API so that the front end can make request to the APIs. 

* In the startup.cs of your api project add the lines below in the configure services method:
 // Adding the cors service.
            services.AddCors();

* Add the below lines in the Configure method of your startup.cs right below the app.UseRouting();
//Enabling CORS policy
            app.UseCors(policyVar => policyVar.AllowAnyHeader().AllowAnyMethod().WithOrigins("http://localhost:4200/"));
http://localhost:4200/ is the source of our front end.

Unfortunately above lines didn't work for me, so I changed to something like this in configure services method:
// Adding the cors service.
            services.AddCors(o => o.AddPolicy("MyPolicy", builder =>
            {
                builder.AllowAnyOrigin()
                       .AllowAnyMethod()
                       .AllowAnyHeader();
            }));
and something like this in Configure method:
//Enabling CORS policy
            app.UseCors("MyPolicy");


* Make use of structural directives to display the fetched users:
<ul>
  <li *ngFor='let user of users'>
    {{user.id}} - {{user.userName}}
  </li>
</ul>
Note: property in Angular is case sensitive. So, userName != username.

Use more angular and not jquery, so add ngx-bootstrap
> ng add ngx-bootstrap 
use the above commadn to add ngx-bootstrap through your angular cli

* Install font-awesome
> npm install font-awesome

* Using HTTPS in Angular
Install the certificate on your machine and copy it in your project in a folder named as ssl
In the package.json add the below lines of code under serve:
"options": {
            "sslKey": "./ssl/server.key",
            "sslCert": "./ssl/server.crt",
            "ssl":true
          },


